\relax 
\citation{Yee:2010:NCS:1629175.1629203}
\citation{Sehr:2010:ASF:1929820.1929822}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\citation{Wahbe:1993:ESF:173668.168635}
\@writefile{toc}{\contentsline {section}{\numberline {2}Software Fault Isolation}{2}}
\newlabel{sec:sfi}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Principle}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Code generator}{2}}
\newlabel{ssub:Code generator}{{2.1.1}{2}}
\newlabel{par:Confining memory accesses}{{2.1.1}{3}}
\@writefile{toc}{\contentsline {paragraph}{Confining memory accesses.}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Pseudo code of the sandboxing operation}}{3}}
\newlabel{algo_sandbox}{{1}{3}}
\newlabel{par:Protection of sandboxing mechanisms}{{2.1.1}{3}}
\citation{Wahbe:1993:ESF:173668.168635}
\@writefile{toc}{\contentsline {paragraph}{Protection of sandboxing mechanisms.}{4}}
\newlabel{par:Controled interactions with the protected program}{{2.1.1}{4}}
\@writefile{toc}{\contentsline {paragraph}{Controlled interactions with the protected program.}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Code verifier}{4}}
\newlabel{ssub:Code verifier}{{2.1.2}{4}}
\citation{Wahbe:1993:ESF:173668.168635}
\citation{Wahbe:1993:ESF:173668.168635}
\citation{Mccamant_evaluatingsfi}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Pros and cons}{5}}
\newlabel{ssub:Pros and cons}{{2.1.3}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}SFI for other architectures}{5}}
\newlabel{sub:sfi_other}{{2.2}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}SFI for CISC architectures}{5}}
\newlabel{ssub:SFI for CISC architectures}{{2.2.1}{5}}
\citation{Yee:2010:NCS:1629175.1629203}
\citation{Yee:2010:NCS:1629175.1629203}
\citation{Yee:2010:NCS:1629175.1629203}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}NativeClient the implementation of SFI by Google}{6}}
\newlabel{ssub:NativeClient the implementation of SFI by Google}{{2.2.2}{6}}
\newlabel{par:NaCl_32}{{2.2.2}{6}}
\@writefile{toc}{\contentsline {paragraph}{NativeClient for x86-32.}{6}}
\citation{Yee:2010:NCS:1629175.1629203}
\citation{Sehr:2010:ASF:1929820.1929822}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces NaCl rules (Bennet Yee et al.\nobreakspace  {}\cite  {Yee:2010:NCS:1629175.1629203}, Table\nobreakspace  {}1)}}{7}}
\newlabel{nacl_constraints}{{2}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces \texttt  {nacljmp} the reduced sandboxing operation (Bennet Yee et al.\nobreakspace  {}\cite  {Yee:2010:NCS:1629175.1629203})}}{7}}
\newlabel{nacl_jump}{{3}{7}}
\newlabel{par:NativeClient for X86-64 and ARM.}{{2.2.2}{7}}
\@writefile{toc}{\contentsline {paragraph}{NativeClient for X86-64 and ARM.}{7}}
\citation{Leroy:2009:FVR:1538788.1538814}
\citation{Leroy:2009:FVR:1538788.1538814}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}SFI using a certified compiler}{8}}
\newlabel{sub:sfi_comp}{{2.3}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}CompCert the verified compiler}{8}}
\newlabel{ssub:CompCert the verified compiler}{{2.3.1}{8}}
\newlabel{par:CompCert}{{2.3.1}{8}}
\@writefile{toc}{\contentsline {paragraph}{CompCert.}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Compilation routine of CompCert (Xavier Leroy\nobreakspace  {}\cite  {Leroy:2009:FVR:1538788.1538814}, Figure\nobreakspace  {}1)}}{8}}
\newlabel{compcert_passes}{{4}{8}}
\citation{compCert_memory_model}
\citation{Kroll:2014:PSF:2708449.2708686}
\newlabel{par:Memory model of CompCert}{{2.3.1}{9}}
\@writefile{toc}{\contentsline {paragraph}{Memory model of CompCert.}{9}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}SFI with CompCert}{9}}
\newlabel{ssub:SFI with CompCert}{{2.3.2}{9}}
\newlabel{par:Cminor}{{2.3.2}{9}}
\@writefile{toc}{\contentsline {paragraph}{Cminor.}{9}}
\newlabel{par:Specification of the SFI tranformation}{{2.3.2}{9}}
\@writefile{toc}{\contentsline {paragraph}{Specification of the SFI transformation.}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces \textit  {Sandboxing} of a module in CompCert (Joshua A. Kroll et al., Figure\nobreakspace  {}1)}}{10}}
\newlabel{psfi}{{5}{10}}
\newlabel{par:Masking in CompCert}{{2.3.2}{10}}
\@writefile{toc}{\contentsline {paragraph}{Masking in CompCert.}{10}}
\newlabel{par:SFI transformations}{{2.3.2}{10}}
\@writefile{toc}{\contentsline {paragraph}{SFI transformations}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Using \texttt  {malloc} to allocate memory for the frames (Joshua A. Kroll et al.)}}{11}}
\newlabel{shadow_stack}{{6}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.3}Evaluation of the approach}{11}}
\newlabel{ssub:Evalutation of the approach}{{2.3.3}{11}}
\citation{Yee:2010:NCS:1629175.1629203}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Limit of SFI}{12}}
\newlabel{sub:Limits of SFI}{{2.4}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Overview of the approach}{13}}
\newlabel{sec:Overview of the approach}{{3}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}ROP attacks}{13}}
\newlabel{sub:rop_attack}{{3.1}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}The stack}{13}}
\newlabel{ssub:The stack}{{3.1.1}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Buffer overflow}{13}}
\newlabel{ssub:Buffer overflow}{{3.1.2}{13}}
\citation{BRSS08}
\citation{S07}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Example of buffer overflow in C}}{14}}
\newlabel{buffer_overflow_code}{{7}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Output from buffer overflow example}}{15}}
\newlabel{output_buffer}{{8}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Description of the approach}{15}}
\newlabel{sub:Description of the approach}{{3.2}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}Proposed solution}{16}}
\newlabel{par:Fixing return addresses locations}{{3.2.1}{16}}
\@writefile{toc}{\contentsline {paragraph}{Fixing return addresses locations and stack alignment.}{16}}
\newlabel{par:Detection of dangerous instructions}{{3.2.1}{16}}
\@writefile{toc}{\contentsline {paragraph}{Detection of dangerous instructions.}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Stack modifications}}{17}}
\newlabel{idea_stack}{{9}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces \textit  {strcpy} source code from Apple}}{17}}
\newlabel{strcpy}{{10}{17}}
\newlabel{par:Protection around dangerous statements}{{3.2.1}{17}}
\@writefile{toc}{\contentsline {paragraph}{Securing dangerous statements.}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Runtime check algorithm}}{18}}
\newlabel{runtime_check}{{11}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Security properties}{19}}
\newlabel{sub:Security properties}{{3.3}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Analysis of the approach}{19}}
\newlabel{sub:Analysis of the approach}{{3.4}{19}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.4.1}Conditions}{19}}
\newlabel{ssub:Conditions}{{3.4.1}{19}}
\newlabel{par:Stack modifications}{{3.4.1}{20}}
\@writefile{toc}{\contentsline {paragraph}{Stack modifications.}{20}}
\newlabel{par:Insecure libraries}{{3.4.1}{20}}
\@writefile{toc}{\contentsline {paragraph}{Insecure libraries.}{20}}
\newlabel{par:Modules need the same offset}{{3.4.1}{20}}
\@writefile{toc}{\contentsline {paragraph}{Modules need the same offset.}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces C inline assembly}}{20}}
\newlabel{inline_assembly}{{12}{20}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.4.2}Discussion}{20}}
\newlabel{ssub:Discussion}{{3.4.2}{20}}
\newlabel{par:Architecture dependant}{{3.4.2}{21}}
\@writefile{toc}{\contentsline {paragraph}{Architecture dependant.}{21}}
\newlabel{par:Memory consumption}{{3.4.2}{21}}
\@writefile{toc}{\contentsline {paragraph}{Memory consumption.}{21}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Implementation}{22}}
\newlabel{sec:implementation}{{4}{22}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}CompCert stack}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces CompCert x86-32 stack layout}}{22}}
\newlabel{stack_layout}{{13}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces CompCert function call routine}}{23}}
\newlabel{call_routine}{{14}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Fixed stack frames size}{23}}
\newlabel{par:Fix the frames size}{{4.2}{24}}
\@writefile{toc}{\contentsline {paragraph}{Fix the frames size.}{24}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces CompCert x86-32 frame record}}{24}}
\newlabel{frame_record}{{15}{24}}
\newlabel{par:Choice of frames size}{{4.2}{24}}
\@writefile{toc}{\contentsline {paragraph}{Choice of frames size.}{24}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Transformation of CompCert frame}}{25}}
\newlabel{frame_transform}{{16}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Stack alignment}{25}}
\newlabel{par:ASLR}{{4.3}{25}}
\@writefile{toc}{\contentsline {paragraph}{ASLR.}{25}}
\newlabel{par:Stack alignment}{{4.3}{25}}
\@writefile{toc}{\contentsline {paragraph}{Stack alignment.}{25}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Fixing the size of CompCert stack frames}}{26}}
\newlabel{stack_transform}{{17}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Aligning CompCert stack frames}}{27}}
\newlabel{stack_align}{{18}{27}}
\newlabel{par:Alignment algorithm}{{4.3}{27}}
\@writefile{toc}{\contentsline {paragraph}{Alignment algorithm.}{27}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Alignment algorithm}}{28}}
\newlabel{align_algo}{{19}{28}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Detection of memory write statements}{28}}
\newlabel{par:Clight implementation}{{4.4}{28}}
\@writefile{toc}{\contentsline {paragraph}{Clight implementation.}{28}}
\newlabel{par:Clight semantic}{{4.4}{29}}
\@writefile{toc}{\contentsline {paragraph}{Clight semantic.}{29}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Clight statements}}{29}}
\newlabel{clight_statements}{{20}{29}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Securing memory write statements}{30}}
\newlabel{sub:implem_check_address}{{4.5}{30}}
\newlabel{par:Distinguish stack or heap}{{4.5}{31}}
\@writefile{toc}{\contentsline {paragraph}{Distinguish stack and heap addresses.}{31}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Runtime checks}}{31}}
\newlabel{classic_check}{{21}{31}}
\newlabel{par:Classic check}{{4.5}{31}}
\@writefile{toc}{\contentsline {paragraph}{Check the property $a\nobreakspace  {}mod\nobreakspace  {}n=0$.}{31}}
\newlabel{par:Branchless check}{{4.5}{32}}
\@writefile{toc}{\contentsline {paragraph}{Branchless check.}{32}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Branchless version of the second check}}{33}}
\newlabel{branchless}{{22}{33}}
\citation{Leroy:2009:FVR:1538788.1538814}
\@writefile{toc}{\contentsline {section}{\numberline {5}Evaluation of the implementation}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Evaluation of security}{34}}
\newlabel{par:Fixed stack frames without protection.}{{5.1}{34}}
\@writefile{toc}{\contentsline {paragraph}{Fixed stack frames without protection (Figure\nobreakspace  {}23\hbox {}).}{34}}
\newlabel{par:Complete implementation with protection}{{5.1}{34}}
\@writefile{toc}{\contentsline {paragraph}{Complete implementation with protection (Figure\nobreakspace  {}24\hbox {}).}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Evaluation of performance}{34}}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces Output from vulnerable CompCert executable}}{35}}
\newlabel{output_weak}{{23}{35}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.1}Efficiency}{35}}
\newlabel{ssub:Efficiency}{{5.2.1}{35}}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces Output from protected CompCert executable}}{36}}
\newlabel{output_protected}{{24}{36}}
\newlabel{par:Fixed frames size}{{5.2.1}{36}}
\@writefile{toc}{\contentsline {paragraph}{Fixed frames size performance.}{36}}
\newlabel{par:ifthenelsevsbranchless}{{5.2.1}{36}}
\@writefile{toc}{\contentsline {paragraph}{\textit  {if then else} and branchless comparison.}{36}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces Execution time percentages compared to the original CompCert}}{37}}
\newlabel{time_percentage_graph}{{25}{37}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces Number of runtime checks executed per program}}{38}}
\newlabel{occurence_graph}{{26}{38}}
\@writefile{toc}{\contentsline {paragraph}{Relation between runtime checks and delay.}{38}}
\@writefile{lof}{\contentsline {figure}{\numberline {27}{\ignorespaces Evolution of the overhead percentage depending of the number of runtime checks executed}}{39}}
\newlabel{correlation_graph}{{27}{39}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.2}Stack frames size}{39}}
\newlabel{ssub:Stack frames size}{{5.2.2}{39}}
\@writefile{lof}{\contentsline {figure}{\numberline {28}{\ignorespaces Distribution of the minimum frames size among 74 test programs}}{40}}
\newlabel{frame_size_graph}{{28}{40}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Discussion}{40}}
\newlabel{par:More tests}{{5.3}{40}}
\@writefile{toc}{\contentsline {paragraph}{More tests.}{40}}
\citation{Mccamant_evaluatingsfi}
\newlabel{par:guard_area}{{5.3}{41}}
\@writefile{toc}{\contentsline {paragraph}{Guard area between the stack and the heap}{41}}
\@writefile{lof}{\contentsline {figure}{\numberline {29}{\ignorespaces Guard area for the memory}}{41}}
\newlabel{guard}{{29}{41}}
\newlabel{par:Protection of runtime checks}{{5.3}{41}}
\@writefile{toc}{\contentsline {paragraph}{Protection of runtime checks.}{41}}
\newlabel{par:improvement}{{5.3}{42}}
\@writefile{toc}{\contentsline {paragraph}{Ways of improvement.}{42}}
\@writefile{lof}{\contentsline {figure}{\numberline {30}{\ignorespaces Example of harmless C code }}{42}}
\newlabel{harmless}{{30}{42}}
\newlabel{par:Transparency}{{5.3}{42}}
\@writefile{toc}{\contentsline {paragraph}{Transparency.}{42}}
\citation{Kroll:2014:PSF:2708449.2708686}
\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusion}{43}}
\newlabel{sec:Conclusion}{{6}{43}}
\bibdata{ref}
\bibcite{compCert_memory_model}{1}
\bibcite{BRSS08}{2}
\bibcite{Kroll:2014:PSF:2708449.2708686}{3}
\bibcite{Leroy:2009:FVR:1538788.1538814}{4}
\bibcite{Mccamant_evaluatingsfi}{5}
\bibcite{Sehr:2010:ASF:1929820.1929822}{6}
\bibcite{S07}{7}
\bibcite{Wahbe:1993:ESF:173668.168635}{8}
\bibcite{Yee:2010:NCS:1629175.1629203}{9}
\bibstyle{plain}
